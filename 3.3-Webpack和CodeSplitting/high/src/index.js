// lodash为1mb
// 业务逻辑为1mb
// 最终打包main.js为2mb
/**第一种方式
 * 1.打包文件会很大2mb，加载时间会很长
 * 2.当修改部分业务逻辑，重新打包又是2mb，用户需要重新加载新的2mb文件
 *
 */
// 业务逻辑
console.log(window._.join(['a', 'b', 'c'], '****'));

/**第二种方式
 * 1.lodash库与业务逻辑分开两个js，最终打包生成两个js（浏览器并行加载）
 * 2.当修改部分业务逻辑，重新打包，只需要替换修改的业务逻辑的js文件。lodash不需要加载，缓存中存在
 *
 */

//  第二种方式是人为实现代码分割，我们可以借助插件配置splitChunks: { chunks: 'all', }实现代码分割(Code Splitting)
